Define a function 'max_product(N: int, K: int, A: List[int]) -> int' to handle the input parameters where N is the number of integers, K is the number of integers to choose, and A is the list of integers. Implement input handling to read integers N and K, and a list of integers A from standard input. Sort the list A in descending order to facilitate the selection of the largest K elements. Handle the case where K is equal to N by directly calculating the product of all elements in A. Implement logic to calculate the product of the largest K elements from the sorted list A. Ensure that the product is calculated modulo (10^9 + 7) to prevent overflow and meet the output requirements. Handle negative numbers in the list A by considering the sign of the product based on the count of negative numbers chosen. Implement a check to ensure that if K is odd and there are no positive numbers, the product should be the least negative possible. Return the final computed product as an integer between 0 and (10^9 + 6) inclusive. Print the result of the maximum product modulo (10^9 + 7) as the output.