Read the positive integer \( N \) from standard input. Initialize a 2D list (grid) \( A \) of size \( N \times N \) to store the digits. Populate the grid \( A \) by reading \( N \) rows of \( N \) integers each from standard input. Define a function 'get_max_number(start_row, start_col, direction)' that takes the starting position and direction as arguments. In 'get_max_number', simulate the movement in the specified direction for \( N-1 \) steps, collecting the digits from the grid \( A \). Convert the collected digits into an integer and return the value. Iterate over all possible starting positions in the grid and all eight possible directions. For each combination, call 'get_max_number' and keep track of the maximum integer value obtained. Print the maximum integer value found after evaluating all paths. Ensure that the output is formatted as a single integer.