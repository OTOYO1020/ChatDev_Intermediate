Define a function 'find_kth_321_like_number(K: int) -> int' to find the K-th smallest 321-like Number. Implement input handling to read the integer K from standard input. Create a helper function 'is_321_like_number(x: int) -> bool' to check if a given number x is a 321-like Number. Generate a list of all possible 321-like Numbers by iterating through combinations of digits from 1 to 9 in strictly decreasing order. Store the generated 321-like Numbers in a list and sort them to ensure they are in ascending order. Ensure that the list contains at least K elements as per the problem constraints. Return the K-th element from the sorted list of 321-like Numbers. Implement error handling for invalid input values (though constraints guarantee valid input). Test the function with various values of K to ensure correctness. Output the result of the function call in the format 'The K-th smallest 321-like Number is: {result}'.