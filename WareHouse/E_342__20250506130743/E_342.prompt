Read integers N and M from standard input, representing the number of stations and pieces of information about trains, respectively. Initialize a list 'train_info' to store tuples of train information for each of the M pieces of information. For each piece of information (i from 1 to M):\n   - Read the tuple (l_i, d_i, k_i, c_i, A_i, B_i) from standard input.\n   - Append the tuple to 'train_info'. Create a function 'calculate_latest_arrival(S, train_info)' that computes the latest time to arrive at station N from station S. In 'calculate_latest_arrival', initialize a variable 'latest_time' to store the maximum arrival time, starting with '-inf'. For each train information in 'train_info', determine the departure and arrival times based on the given l_i, d_i, k_i, c_i, A_i, and B_i. Implement a loop to check for valid sequences of train transfers that satisfy the conditions outlined in the problem statement. Update 'latest_time' if a valid sequence is found that allows arrival at station N. Return the value of 'latest_time' for each station S from 1 to N-1. Print the results for f(1), f(2), ..., f(N-1) as output.