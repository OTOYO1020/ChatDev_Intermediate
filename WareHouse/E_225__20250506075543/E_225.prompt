Read the integer N from standard input, representing the number of 7's. Initialize a list 'coordinates' to store the (x_i, y_i) pairs for each of the N 7's. For i from 1 to N, read the coordinates (x_i, y_i) and append them to the 'coordinates' list. Define a function 'is_visible(origin, coord)' that checks if the 7 at 'coord' is wholly visible from the origin. In 'is_visible', calculate the vertices of the quadrilateral formed by the origin and the points (x_i-1, y_i), (x_i, y_i), and (x_i, y_i-1). Check for intersections between the interior of the quadrilateral and the segments of other 7's using a geometric intersection algorithm. Initialize a counter 'visible_count' to zero. For each coordinate in 'coordinates', call 'is_visible(origin, coord)' and increment 'visible_count' if the 7 is visible. Print the value of 'visible_count', which represents the maximum number of 7's that are wholly visible from the origin.