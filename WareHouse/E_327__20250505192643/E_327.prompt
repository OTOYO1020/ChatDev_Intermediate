Read the integer N from standard input, representing the number of contests. Read the array P of length N, containing the performance values P_i for each contest. Initialize a variable 'max_rating' to store the maximum rating found, starting from a very low value. Iterate over all possible subsets of contests (from 1 to N):\n   - For each subset, calculate the number of chosen contests 'k'.\n   - Extract the performances Q from the chosen contests in the order they were participated. Compute the rating R using the formula:\n   - \( R = \frac{\sum_{i=1}^k (0.9)^{k-i}Q_i}{\sum_{i=1}^k (0.9)^{k-i}} - \frac{1200}{\sqrt{k}} \) Update 'max_rating' if the computed rating R is greater than the current 'max_rating'. Ensure that at least one contest is chosen in each subset. After evaluating all subsets, print the value of 'max_rating' as the result. Handle edge cases where N is 1 by directly returning the performance of the single contest. Ensure that the performance values are integers and fall within the specified constraints.