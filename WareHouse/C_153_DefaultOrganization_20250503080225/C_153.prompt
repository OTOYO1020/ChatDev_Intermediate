Read integers N and K from standard input, followed by an array H of length N representing the health of each monster. Initialize a variable 'total_attacks' to 0 to keep track of the number of Attack actions needed. Sort the array H in descending order to prioritize monsters with the highest health. For each monster's health in H:\n   - If the health is greater than 0 and K is available:\n     - Use a Special Move on that monster (decrease K by 1).\n   - If the health is still greater than 0 after using Special Move, calculate the number of Attack actions needed to bring its health to 0.\n   - Update 'total_attacks' with the number of Attack actions needed. Print the final value of 'total_attacks' as the minimum number of Attack actions required before winning.