Task:
Define the function signature as 'def can_reach_goal(H: int, W: int, grid: List[List[str]]) -> Tuple[bool, int]:' to handle the input parameters where H is the number of rows, W is the number of columns, and grid is a 2D list representing the field. Parse the input to extract the values of H and W, and construct the grid from the input format. Identify the positions of the starting point 'S' and the goal 'G' within the grid. Implement a method to mark the squares that are in the line of sight of any person represented by '>', 'v', '<', '^' in the grid. Implement a breadth-first search (BFS) algorithm to explore all possible moves from the starting point 'S' while avoiding impassable squares and squares in the line of sight. Keep track of the number of moves taken to reach each square during the BFS traversal. Check if the goal 'G' is reachable from the starting point 'S' within the BFS algorithm. If reachable, return the minimum number of moves required to reach 'G'; otherwise, return that the goal is not reachable. Ensure that the function handles edge cases such as maximum grid size and various configurations of obstacles and persons. Format the output to indicate whether the goal is reachable and the minimum number of moves, returning a tuple (reachable: bool, moves: int).

Config:
ChatEnvConfig.with_memory: False
ChatEnvConfig.clear_structure: True
ChatEnvConfig.git_management: False
ChatEnvConfig.gui_design: True
ChatEnvConfig.incremental_develop: False
ChatEnvConfig.background_prompt: ChatDev is a software company powered by multiple intelligent agents, such as chief executive officer, chief human resources officer, chief product officer, chief technology officer, etc, with a multi-agent organizational structure and the mission of 'changing the digital world through programming'.


Roster:
Chief Executive Officer, Counselor, Chief Human Resource Officer, Chief Product Officer, Chief Technology Officer, Programmer, Programmer_1, Programmer_2, Programmer_3, Code Reviewer, Software Test Engineer, Chief Creative Officer

Modality:
application

Ideas:


Language:
 Python

Code_Version:
34.0

Proposed_images:
0

Incorporated_images:
0

