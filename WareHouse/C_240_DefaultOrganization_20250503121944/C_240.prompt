Read the integer values N and X from standard input. Initialize an empty list 'jumps' to store the pairs of (a_i, b_i) for each jump. For i from 1 to N:\n   - Read the integers a_i and b_i from standard input.\n   - Append the tuple (a_i, b_i) to the 'jumps' list. Define a function 'canReach(X, jumps)' that takes the target coordinate X and the list of jumps. In 'canReach', initialize a set 'possible_positions' with the starting position {0}. For each (a_i, b_i) in 'jumps':\n   - Create a new set 'new_positions' to store the next possible positions.\n   - For each position in 'possible_positions', add a_i and b_i to 'new_positions'.\n   - Update 'possible_positions' with 'new_positions'. Check if X is in 'possible_positions':\n   - If yes, return True; otherwise, return False. Call 'canReach(X, jumps)' and store the result. Print YES if the result is True; otherwise, print NO.