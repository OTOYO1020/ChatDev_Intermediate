Read integers N and M from standard input, representing the number of switches and bulbs, respectively. Initialize a list to store the connection information for each bulb. For each bulb, read the integer k_i (number of connected switches) and the list of connected switch indices s_{i1}, s_{i2}, ..., s_{ik_i}. Read the integer p_i for each bulb, which indicates the required parity (0 or 1) for the bulb to be lit. Generate all possible combinations of switch states (2^N combinations) using binary representation, where each bit represents the state of a switch (0 for off, 1 for on). For each combination of switch states, check each bulb to determine if it is lit: Count the number of on switches connected to the bulb. /  Check if this count is congruent to p_i modulo 2. If all bulbs are lit for a given combination of switch states, count this combination as valid. Repeat steps 5 and 6 for all combinations of switch states. Output the total number of valid combinations where all bulbs are lit.