Receiving input and initializing: Read N (the number of cards), M (the number of operations), and A (the array of integers written initially on each card) from standard input. Next, read M rows of (B_j, C_j) and store the contents of each operation in the updates list. Managing the current card values: Manage array A as a heap or array, and prepare it so that you can efficiently select the target value to be rewritten by the operation. Organizing and preparing operations: Sort all (B_j, C_j) in descending order of C_j. By using operations with larger C_j first, you can maximize the total value. Optimal card rewriting: For the sorted list of operations, select up to B_j cards with the smallest values and rewrite them to C_j. Use a data structure that allows access in ascending order (e.g. heapq) to select cards. Calculating and outputting the final sum: Calculate the sum of all the rewritten card values, and output the sum as an integer. This is the maximum sum.