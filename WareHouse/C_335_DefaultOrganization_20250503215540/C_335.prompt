Read integers N and Q from standard input, where N is the number of parts of the dragon and Q is the number of queries. Initialize a list 'positions' of size N to store the coordinates of each part, setting the initial position of part i at (i, 0). Process each of the Q queries in a loop:\n   - If the query is of type '1 C', where C is one of 'R', 'L', 'U', or 'D':\n     - Update the head's position based on the direction C:\n       - If C is 'R', increment the head's x-coordinate.\n       - If C is 'L', decrement the head's x-coordinate.\n       - If C is 'U', increment the head's y-coordinate.\n       - If C is 'D', decrement the head's y-coordinate.\n     - Move each part i (for i from 2 to N) to the position of part i-1 before the move.\n   - If the query is of type '2 p', where p is the part number:\n     - Retrieve the coordinates of part p from the 'positions' list. Print the coordinates of part p for each type '2 p' query.\n\nThis structure ensures that the dragon's movement and position retrieval are handled efficiently, adhering to the constraints provided.