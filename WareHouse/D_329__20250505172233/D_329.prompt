Read integers N and M from standard input, representing the number of candidates and the number of votes, respectively. Read the array A of length M, which contains the votes for each candidate. Initialize an array 'vote_count' of size N to keep track of the number of votes for each candidate. Initialize variables 'current_winner' and 'max_votes' to track the candidate with the most votes and the maximum number of votes. Loop through the votes from 1 to M:\n   - For each vote A[i], increment the corresponding index in 'vote_count'.\n   - Check if the current candidate has more votes than 'max_votes':\n     - If true, update 'current_winner' to A[i] and 'max_votes' to the new vote count.\n     - If the vote count equals 'max_votes', update 'current_winner' to the smaller candidate number if A[i] is smaller.\n   - Print the 'current_winner' after each vote is counted. Ensure that the solution handles the constraints efficiently, considering the maximum values for N and M. Output the current winner after each vote is counted in the specified format.