Read the integer N from standard input, representing the number of employees. Initialize two lists, 'A' and 'B', to store the time taken by each employee to complete Work A and Work B, respectively. Read N pairs of integers from standard input and populate the lists 'A' and 'B' with the respective times for each employee. Initialize a variable 'min_time' to a large value to keep track of the minimum time required to complete both works. Iterate through each employee 'i' from 1 to N:\n   - Calculate the time if both works are assigned to employee 'i': 'time_both = A[i] + B[i]'.\n   - Update 'min_time' with the minimum of its current value and 'time_both'. Iterate through each pair of employees '(i, j)' where 'i' is not equal to 'j':\n   - Calculate the time if Work A is assigned to employee 'i' and Work B to employee 'j': 'time_separate = max(A[i], B[j])'.\n   - Update 'min_time' with the minimum of its current value and 'time_separate'. After evaluating all combinations, the value of 'min_time' will hold the shortest possible time needed to complete both works. Print the value of 'min_time' as the final output.