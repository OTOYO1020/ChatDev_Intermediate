Define a function 'process_queries(Q: int, queries: List[Tuple[int, Union[int, None]]])' to handle the input parameters where 'Q' is the number of queries and 'queries' is a list of tuples representing each query. Initialize an empty list 'A' to store the sequence of integers. Iterate over the 'queries' list using a loop to process each query in the order they are given. For each query of type '1 x', append the integer 'x' to the end of the list 'A' using 'A.append(x)'. For each query of type '2', print the first element of the list 'A' using 'print(A[0])', and then remove that element from the list using 'A.pop(0)'. For each query of type '3', sort the list 'A' in ascending order using 'A.sort()'. Ensure that the function handles the constraints, particularly that 'A' is not empty when processing a type '2' query. Use appropriate data structures to ensure efficient handling of up to '2 * 10^5' queries. Implement error handling for invalid queries, although the problem guarantees valid input. Return or print the results of the queries as specified in the output format.