Define the function 'calculate_minimum_time(N: int, A: List[int], B: List[int], X: int) -> int' to handle the main logic of the problem. Parse the input to extract the values of N, A, B, and X, ensuring that A and B are lists of integers. Initialize a variable 'total_time' to 0 to keep track of the total time needed to clear the stages. Iterate through each stage from 1 to N, and for each stage, calculate the time required to clear it the first time (A[i] + B[i]) and subsequent times (B[i]). For the first stage, add the time of the movie and gameplay to 'total_time' for the first clear. For subsequent stages, add only the gameplay time to 'total_time' for each additional clear after the first. Ensure that the unlocking of stages is handled correctly, such that stage i can only be cleared after stage i-1 is cleared. Calculate the total number of clears needed for each stage based on the input X and the number of stages. Return the value of 'total_time' as the output of the function. Format the output as an integer representing the minimum time needed to clear the stages X times.