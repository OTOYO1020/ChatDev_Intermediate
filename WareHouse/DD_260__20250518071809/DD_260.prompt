Define the function 'find_eaten_cards(N: int, K: int, P: List[int]) -> List[int]' to handle the input parameters where N is the number of cards, K is the threshold for eating cards, and P is the list of integers representing the cards. Initialize a list 'table' to keep track of the face-up cards on the table. Iterate through each card in the list P using a loop to simulate the N moves. For each card drawn, determine the integer X and check the 'table' for the smallest card that is greater than or equal to X. If such a card exists, stack the drawn card on top of it; otherwise, place the drawn card face up on the table. After placing the card, check if the number of face-up cards on the table equals K. If K face-up cards are present, remove them from the table and mark them as eaten. Maintain a list 'eaten_moves' to record the move number for each card that is eaten. After processing all cards, check which cards remain uneaten and record that information. Return the list 'eaten_moves' indicating the move number for each card or -1 if it was never eaten.