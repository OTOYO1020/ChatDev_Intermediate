Read integers N, M, and K from standard input. Initialize a variable 'mod = 10^9 + 7' to handle the modulo operation. Calculate the total number of arrangements of N white balls and M black balls without any restrictions using the formula: 'total_arrangements = factorial(N + M) / (factorial(N) * factorial(M))'. Create a function 'count_valid_arrangements(N, M, K)' to count the valid arrangements that satisfy the condition 'w_i ≤ b_i + K' for all 'i'. Inside 'count_valid_arrangements', initialize a variable 'valid_count = 0'. Use dynamic programming or combinatorial methods to iterate through possible distributions of balls while ensuring the condition 'w_i ≤ b_i + K' is met. Update 'valid_count' with the number of valid arrangements found, ensuring to apply modulo 'mod' at each step to prevent overflow. Return the 'valid_count' from 'count_valid_arrangements'. Print the final count of valid arrangements modulo 'mod'.\n\nThis breakdown ensures that the problem is tackled step-by-step, focusing on reading inputs, calculating arrangements, and ensuring the conditions are met through a dedicated function.