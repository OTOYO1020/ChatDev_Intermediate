Define a function named 'calculate_sum' that takes three parameters: 'A' (integer), 'X' (integer), and 'M' (integer). Implement input handling to read integers 'A', 'X', and 'M' from standard input. Check if the input values of 'A', 'X', and 'M' fall within the specified constraints: 1 ≤ A, M ≤ 10^9 and 1 ≤ X ≤ 10^12. Calculate the sum of the series using the formula for the geometric series: 'sum = (A^X - 1) / (A - 1)' if A > 1, otherwise handle the case when A = 1. Use modular arithmetic to compute the result of the sum modulo 'M'. Implement a method to efficiently compute 'A^i mod M' using exponentiation by squaring to handle large values of 'X'. Ensure that the division in the geometric series formula is performed under modulo 'M' using modular multiplicative inverse. Return the computed sum modulo 'M' from the 'calculate_sum' function. Implement error handling for invalid input values and edge cases. Output the final result to standard output.