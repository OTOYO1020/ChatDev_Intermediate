Task:
Read integers N and Q from standard input, where N is the number of vertices and Q is the number of queries. Initialize a list 'X' of size N to store the integer values written on each vertex. Read the values for 'X' from standard input. Initialize an adjacency list 'tree' to represent the tree structure based on the edges provided. Read the edges (A_i, B_i) from standard input and populate the 'tree' adjacency list. For each query, read the pair of integers (V_i, K_i) from standard input. Implement a function 'find_kth_largest(V, K)' that:\n   - Traverses the subtree rooted at vertex V using Depth-First Search (DFS) to collect all values in that subtree.\n   - Sorts the collected values in descending order.\n   - Returns the K-th largest value from the sorted list. Call 'find_kth_largest(V_i, K_i)' for each query and store the results. Print the results for all queries, each on a new line. Ensure that the implementation handles the constraints efficiently, particularly for large values of N and Q.

Config:
ChatEnvConfig.with_memory: False
ChatEnvConfig.clear_structure: True
ChatEnvConfig.git_management: False
ChatEnvConfig.gui_design: True
ChatEnvConfig.incremental_develop: False
ChatEnvConfig.background_prompt: ChatDev is a software company powered by multiple intelligent agents, such as chief executive officer, chief human resources officer, chief product officer, chief technology officer, etc, with a multi-agent organizational structure and the mission of 'changing the digital world through programming'.


Roster:
Chief Executive Officer, Counselor, Chief Human Resource Officer, Chief Product Officer, Chief Technology Officer, Programmer, Programmer_1, Programmer_2, Programmer_3, Code Reviewer, Software Test Engineer, Chief Creative Officer

Modality:
application

Ideas:


Language:
  Python

Code_Version:
34.0

Proposed_images:
0

Incorporated_images:
0

