Read integers H and W from standard input, representing the dimensions of the grid. Read integer N from standard input, representing the number of holed squares. Initialize a set 'holed_squares' to store the coordinates of the holed squares. For each of the next N lines, read the coordinates (a_i, b_i) and add them to the 'holed_squares' set. Initialize a variable 'holeless_count' to zero to count the number of holeless squares. Iterate over all possible top-left corners (i, j) of squares in the grid:\n   - For each (i, j), iterate over possible sizes n starting from 1 until the square exceeds the grid dimensions.\n   - Check if the square defined by (i, j) and size n is holeless:\n     - Ensure that the bottom-right corner (i + n - 1, j + n - 1) is within the grid bounds.\n     - Verify that all squares within the n x n region are not in 'holed_squares'. If the square is holeless, increment 'holeless_count'. After checking all possible squares, print the value of 'holeless_count' as the output.