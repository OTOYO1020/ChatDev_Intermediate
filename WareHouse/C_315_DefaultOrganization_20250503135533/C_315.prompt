Read the integer N from standard input, representing the number of ice cream cups. Initialize two lists: 'flavors' to store the flavor of each cup and 'deliciousness' to store the deliciousness of each cup. Loop from 1 to N to read the flavor and deliciousness values for each cup, storing them in 'flavors[i]' and 'deliciousness[i]' respectively. Initialize a variable 'max_satisfaction' to keep track of the maximum satisfaction achieved. Use a nested loop to evaluate all pairs of cups (i, j) where i < j:\n   - If 'flavors[i]' is not equal to 'flavors[j]', calculate satisfaction as 'deliciousness[i] + deliciousness[j]'.\n   - If 'flavors[i]' is equal to 'flavors[j]', calculate satisfaction as 'deliciousness[i] + (deliciousness[j] / 2)'.\n   - Update 'max_satisfaction' if the calculated satisfaction is greater than the current value. After evaluating all pairs, print the value of 'max_satisfaction' as the output.