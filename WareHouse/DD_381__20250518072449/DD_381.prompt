Define a function 'max_1122_subarray_length(A: List[int]) -> int' that takes a list of positive integers 'A' as input. Check if the length of the input list 'A' is even; if not, return 0 as the maximum length of a 1122 sequence. Iterate through all possible contiguous subarrays of 'A' using two nested loops to generate all subarrays. For each subarray, check if its length is even and if it satisfies the condition that every integer appears exactly twice. Maintain a frequency count of integers in the current subarray using a dictionary or a list. Verify that for every integer in the frequency count, the count is either 0 or 2. If a valid 1122 sequence is found, update the maximum length found so far. Return the maximum length of any valid 1122 sequence found during the iteration. Handle the input format by reading the integer 'N' followed by the list of integers 'A'. Output the result as an integer representing the maximum length of a contiguous subarray that is a 1122 sequence.