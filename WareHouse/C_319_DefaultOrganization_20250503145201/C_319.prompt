Read the 3x3 grid of integers from standard input, storing them in a 2D list 'grid'. Validate that the grid adheres to the constraints:\n   - Check that no row contains the same number in all three cells.\n   - Check that no column contains the same number in all three cells.\n   - Check that the main diagonal (from top-left to bottom-right) does not contain the same number.\n   - Check that the anti-diagonal (from bottom-left to top-right) does not contain the same number. Initialize a variable 'disappointment_count' to zero to track the number of disappointing configurations. Generate all permutations of the numbers in the grid to simulate the random order in which Takahashi sees the numbers. For each permutation, check each row, column, and diagonal for the disappointment condition:\n   - If the first two squares contain the same number and the last square contains a different number, increment 'disappointment_count'. Calculate the total number of permutations of the grid. Compute the probability of not getting disappointed as '1 - (disappointment_count / total_permutations)'. Print the final probability formatted to an appropriate number of decimal places.