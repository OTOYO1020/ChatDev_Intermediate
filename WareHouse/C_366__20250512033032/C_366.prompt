Define a function 'process_queries(Q: int, queries: List[Tuple[int, int]]) -> List[int]' to handle the input parameters, where 'Q' is the number of queries and 'queries' is a list of tuples representing the queries. Initialize an empty bag using a data structure that can efficiently store and count the integers (e.g., a dictionary or a set). Iterate through the list of queries and for each query, check its type (1, 2, or 3). For a query of type '1 x', add the integer 'x' to the bag and update the count of different integers. For a query of type '2 x', remove the integer 'x' from the bag and update the count of different integers accordingly. For a query of type '3', calculate the number of different integers currently in the bag and store the result. Ensure that the operations for adding and removing integers from the bag maintain the integrity of the data structure used. Collect the results from all type '3' queries into a list to be returned at the end of the function. Implement error handling to ensure that the constraints of the problem are respected, particularly for the removal of integers. Return the list of results from type '3' queries as the output of the function.