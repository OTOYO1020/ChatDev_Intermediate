Define the function 'min_expected_cost(N: int, A: int, X: int, Y: int) -> float' to calculate the minimum expected cost. Implement input handling to read integers N, A, X, and Y from standard input. Check the constraints for N, A, X, and Y to ensure they fall within the specified ranges. Implement the operation to replace N with floor(N / A) and calculate the cost associated with this operation. Implement the operation to roll a die and replace N with floor(N / b), where b is the outcome of the die, and calculate the expected cost. Use a loop or recursion to simulate the operations until N becomes 0, keeping track of the total cost incurred. Calculate the expected cost for the die operation by averaging the costs over all possible die outcomes (1 to 6). Compare the costs of both operations at each step and choose the one with the minimum cost. Implement a mechanism to store and retrieve previously computed costs to optimize the calculation (memoization). Output the final minimum expected cost as a floating-point number with appropriate formatting.