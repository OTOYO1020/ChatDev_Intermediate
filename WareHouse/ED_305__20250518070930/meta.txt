Task:
Define the function 'find_guarded_vertices(N: int, M: int, edges: List[Tuple[int, int]], K: int, guards: List[Tuple[int, int]])' to handle the input parameters. Parse the input to extract the number of vertices 'N', number of edges 'M', the list of edges, number of guards 'K', and the list of guards with their positions and stamina. Construct an adjacency list representation of the graph using the edges provided. Implement a breadth-first search (BFS) or depth-first search (DFS) algorithm to calculate the distance from each guard's position to all other vertices. For each guard, determine which vertices are within the guard's stamina range and mark them as guarded. Use a set to collect all unique guarded vertices to avoid duplicates. Sort the list of guarded vertices in ascending order. Return the sorted list of guarded vertices as the output of the function. Ensure that the function handles edge cases, such as when there are no edges or guards. Output the result in the specified format, ensuring it meets the problem's requirements.

Config:
ChatEnvConfig.with_memory: False
ChatEnvConfig.clear_structure: True
ChatEnvConfig.git_management: False
ChatEnvConfig.gui_design: True
ChatEnvConfig.incremental_develop: False
ChatEnvConfig.background_prompt: ChatDev is a software company powered by multiple intelligent agents, such as chief executive officer, chief human resources officer, chief product officer, chief technology officer, etc, with a multi-agent organizational structure and the mission of 'changing the digital world through programming'.


Roster:
Chief Executive Officer, Counselor, Chief Human Resource Officer, Chief Product Officer, Chief Technology Officer, Programmer, Programmer_1, Programmer_2, Programmer_3, Code Reviewer, Software Test Engineer, Chief Creative Officer

Modality:
dashboard

Ideas:


Language:
 Python

Code_Version:
34.0

Proposed_images:
0

Incorporated_images:
0

