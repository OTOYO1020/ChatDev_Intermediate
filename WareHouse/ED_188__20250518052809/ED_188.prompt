Define the function 'max_profit(N: int, M: int, A: List[int], roads: List[Tuple[int, int]])' to handle the input parameters where N is the number of towns, M is the number of roads, A is a list of integers representing the price of gold in each town, and roads is a list of tuples representing the roads connecting the towns. Parse the input to extract the values of N, M, the list A, and the list of roads from the input format. Construct a directed graph representation of the towns and roads using an adjacency list or similar structure. Implement a method to perform a depth-first search (DFS) or breadth-first search (BFS) to explore all reachable towns from each town. For each town, calculate the maximum selling price of gold that can be achieved by traversing the roads to other towns. Keep track of the minimum buying price of gold encountered while traversing from each town to calculate potential profits. Calculate the profit for each possible buying and selling combination of towns based on the traversed paths. Determine the maximum profit from all calculated profits and store it in a variable. Return the maximum profit value from the function. Format the output as an integer representing the maximum profit.