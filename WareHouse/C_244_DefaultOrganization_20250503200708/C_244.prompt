Read the integer N from standard input, which defines the range of integers Takahashi can declare (from 1 to 2N + 1). Initialize a set 'declared_numbers' to keep track of the integers that have already been declared by both players. Enter a loop that continues until the game ends:\n   - a. In each iteration, determine the next integer for Takahashi to declare:\n     - i. Choose an integer 'takahashi_declaration' between 1 and 2N + 1 that is not in 'declared_numbers'.\n   - b. Output 'takahashi_declaration' to standard output and flush the output to ensure it is sent immediately.\n   - c. Read the integer declared by Aoki from standard input:\n     - i. If the integer is 0, break the loop as the game has ended.\n   - d. Add both 'takahashi_declaration' and Aoki's declaration to the 'declared_numbers' set. After the loop ends, terminate the program immediately to comply with the game rules. Ensure that the output is always a valid integer within the specified range and not previously declared. Handle the flushing of standard output after each declaration to avoid time limit exceeded (TLE) errors. Ensure that the program correctly identifies when the game has ended based on Aoki's declaration of 0. Maintain the integrity of the game by checking that no previously declared integers are outputted by Takahashi. Optimize the selection of integers for Takahashi to ensure a winning strategy while adhering to the rules. Output the final declaration and exit the program without any additional output after the game ends.