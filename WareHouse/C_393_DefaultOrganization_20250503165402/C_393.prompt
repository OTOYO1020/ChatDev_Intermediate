Read integers N and M from standard input, representing the number of vertices and edges, respectively. Initialize a set 'edges' to store unique edges and a counter 'removal_count' to track the number of edges to be removed. For each edge from 1 to M, read the vertices 'u_i' and 'v_i'. Check if the edge (u_i, v_i) or (v_i, u_i) already exists in the 'edges' set:\n   - If it exists, increment 'removal_count' by 1 (indicating a multi-edge).\n   - If it does not exist, add the edge (u_i, v_i) to the 'edges' set. After processing all edges, print the value of 'removal_count', which represents the minimum number of edges that must be removed to make the graph simple.\n\n### Function and Variable Names:\n- Function: 'count_edges_to_remove(edges)'\n- Variables: 'N', 'M', 'edges', 'removal_count', 'u_i', 'v_i'