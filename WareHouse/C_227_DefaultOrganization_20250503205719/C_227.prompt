Read the positive integer \( N \) from standard input. Initialize a counter variable 'count' to 0 to keep track of valid triples \( (A, B, C) \). Loop through possible values of \( A \) from 1 to \( N^{1/3} \):\n   - For each \( A \), loop through possible values of \( B \) from \( A \) to \( N^{1/2} \):\n     - For each \( B \), calculate the maximum value of \( C \) as \( C_{max} = \lfloor N / (A \times B) \rfloor \).\n     - If \( C_{max} \) is greater than or equal to \( B \), add \( C_{max} - B + 1 \) to 'count' (this counts all valid \( C \) values from \( B \) to \( C_{max} \)). Print the final value of 'count' as the result.