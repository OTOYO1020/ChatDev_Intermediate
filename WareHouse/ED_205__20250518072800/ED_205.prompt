Define the function 'countArrangements(N: int, M: int, K: int) -> int' to calculate the number of valid arrangements of balls. Parse the input to extract integers N, M, and K from the input format. Implement a method to check the condition 'w_i <= b_i + K' for each arrangement of the balls. Use combinatorial mathematics to calculate the total arrangements of N white balls and M black balls. Incorporate the condition check into the arrangement calculation to filter out invalid arrangements. Implement a modular arithmetic function to return results modulo (10^9 + 7). Optimize the arrangement calculation to handle the upper limits of N and M efficiently. Test the function with edge cases, including minimum and maximum values for N, M, and K. Ensure that the function handles large integers and returns the correct output format. Return the final count of valid arrangements as the output of the function.