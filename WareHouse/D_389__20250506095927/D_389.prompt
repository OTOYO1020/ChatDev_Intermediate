Read the integer radius \( R \) from standard input. Initialize a counter variable 'count' to zero to keep track of the number of squares contained within the circle. Iterate over all integer pairs \( (i, j) \) within the range determined by \( R \):\n   - For \( i \) from \(-R\) to \( R\)\n   - For \( j \) from \(-R\) to \( R\) For each pair \( (i, j) \), calculate the distance from the origin for the four corners of the square:\n   - Calculate the distance for the points \( (i+0.5, j+0.5) \), \( (i+0.5, j-0.5) \), \( (i-0.5, j+0.5) \), and \( (i-0.5, j-0.5) \). Check if all four calculated distances are less than or equal to \( R \):\n   - If true, increment the 'count' variable by 1. After iterating through all pairs, print the final value of 'count' which represents the number of squares completely contained inside the circle.