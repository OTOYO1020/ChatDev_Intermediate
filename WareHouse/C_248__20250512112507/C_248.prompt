Define a function 'count_sequences(N: int, M: int, K: int) -> int' to encapsulate the logic for counting valid sequences. Implement input handling to read integers N, M, and K from standard input. Ensure that the input values satisfy the constraints: 1 ≤ N, M ≤ 50 and N ≤ K ≤ NM. Initialize a variable 'count' to store the number of valid sequences, starting at 0. Use a loop to generate all possible integer sequences of length N with values between 1 and M. For each generated sequence, calculate the sum of its elements and check if it is less than or equal to K. If a sequence satisfies the sum condition, increment the 'count' variable. After checking all sequences, compute the result as 'count % 998244353' to handle large numbers. Return the computed result from the function 'count_sequences'. Print the output of the function call to display the final count of valid sequences.