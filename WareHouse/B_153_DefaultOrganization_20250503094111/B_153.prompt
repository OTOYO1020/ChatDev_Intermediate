Read the integer values for monster's health 'H' and the number of special moves 'N' from standard input. Read the array 'A' of size 'N', which contains the damage values for each special move. Calculate the total damage possible by summing all elements in the array 'A'. Check if the total damage is greater than or equal to 'H':\n   - If true, proceed to the next step; otherwise, print 'No' and terminate. Sort the array 'A' in descending order to prioritize the most damaging moves. Initialize a variable 'current_health' with the value of 'H'. Loop through the sorted array 'A' and apply each move to 'current_health':\n   - Decrease 'current_health' by the value of each move until 'current_health' is less than or equal to '0'. If 'current_health' is less than or equal to '0' after applying the moves, print 'Yes'; otherwise, print 'No'. Ensure that no move is used more than once by iterating through the sorted array without repetition. Handle edge cases where 'N' is 0 or the moves do not sum up to 'H' effectively.