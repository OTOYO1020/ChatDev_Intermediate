Define the function 'calculate_generations(N: int, records: List[int]) -> List[int]' to handle the input parameters, where 'N' is the number of records and 'records' is a list of integers representing the amoebae that disappeared. Initialize a list 'generations' of size '2N + 2' with all elements set to -1, to store the generation distance of each amoeba from amoeba 1. Set 'generations[1]' to 0, as amoeba 1 is the root and has a generation distance of 0. Iterate through the 'records' list using a loop from 'i = 0' to 'N-1' to process each record. For each record 'A_i', determine the indices of the two new amoebae as '2*i + 2' and '2*i + 3'. Set 'generations[2*i + 2]' and 'generations[2*i + 3]' to 'generations[A_i] + 1' to indicate that they are one generation away from their parent amoeba 'A_i'. After processing all records, create a result list 'result' that will contain the generation distances for amoebae from 1 to '2N + 1'. Populate the 'result' list with the values from the 'generations' list for indices '1' to '2N + 1'. Return the 'result' list from the function 'calculate_generations'. Output the result in the format of a list of integers, where each integer represents the generation distance of amoeba 'k' from amoeba '1'.