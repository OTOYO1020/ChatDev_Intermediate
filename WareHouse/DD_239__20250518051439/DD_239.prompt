Define a function 'determine_winner(A: int, B: int, C: int, D: int) -> str' to encapsulate the game logic. Implement input handling to read integers A, B, C, and D from the user or a file, ensuring they meet the constraints 1 ≤ A ≤ B ≤ 100 and 1 ≤ C ≤ D ≤ 100. Generate all possible integers Takahashi can choose, which are in the range [A, B]. Generate all possible integers Aoki can choose, which are in the range [C, D]. Create a helper function 'is_prime(n: int) -> bool' to check if a given integer n is a prime number. Iterate through all combinations of Takahashi's and Aoki's choices, calculating the sum for each combination. For each sum calculated, use the 'is_prime' function to determine if it is prime. Count the number of winning scenarios for Aoki (where the sum is prime) and for Takahashi (where the sum is not prime). Determine the winner based on the counts of winning scenarios: if Aoki has more winning scenarios, he wins; otherwise, Takahashi wins. Return the result as a string 'Aoki' or 'Takahashi' based on the winner, and implement output handling to display the result.