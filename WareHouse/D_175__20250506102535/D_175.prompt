Read integers N and K from standard input. Read the array C of length N, which contains the scores for each square. Read the permutation array P of length N, which indicates the movement of the piece. Initialize a variable 'max_score' to 0 to keep track of the maximum score. For each starting square 'i' from 1 to N:\n   - Initialize a variable 'current_score' to 0.\n   - Initialize a variable 'current_position' to 'i'.\n   - Create a set to track visited squares to detect cycles.\n   - For up to K moves:\n     - If 'current_position' has been visited, break the loop to avoid infinite cycles.\n     - Add 'C[P[current_position - 1]]' to 'current_score'.\n     - Mark 'current_position' as visited.\n     - Update 'current_position' to 'P[current_position - 1]'.\n   - Update 'max_score' with the maximum of 'max_score' and 'current_score'. Print the 'max_score' as the final output.