Read the integer values N and K from standard input. Initialize a list 'points' to store the coordinates of the points. For each point from 1 to N, read the coordinates (X_i, Y_i) and append them to the 'points' list. Create a dictionary 'line_count' to store the number of points that lie on each unique line. Iterate through all pairs of points (i, j) to calculate the slope and intercept of the line formed by each pair:\n   - Use the formula for slope (m) and intercept (b) to represent the line in the form 'y = mx + b'.\n   - Store the line representation in a normalized form (to handle precision issues) in 'line_count'. Count how many points lie on each line stored in 'line_count'. Check if any line has K or more points:\n   - If a line has K or more points, increment a counter 'valid_lines'. If 'valid_lines' is greater than 0, check if there are infinitely many lines (i.e., if all points are collinear):\n   - If all points are collinear, print Infinity.\n   - Otherwise, print the count of 'valid_lines'. Handle edge cases where K = 1, as every point can be considered to lie on a line by itself. Print the final result based on the conditions checked above.