Define a function 'process_queries(S: str, queries: List[Tuple[int, str]]) -> List[int]' to handle the input string and the list of queries. Parse the input string 'S' and the number of queries 'Q' from the input format. Iterate through each query in 'queries' and extract the integer 'X_i' and character 'C_i'. For each query, replace the character at index 'X_i - 1' in the string 'S' with 'C_i' (adjusting for zero-based indexing). After each replacement, count the occurrences of the substring 'ABC' in the modified string 'S' using a helper function 'count_abc(S: str) -> int'. Store the result of the count for each query in a list 'results'. Return the list 'results' containing the counts of 'ABC' after each query is processed. Ensure that the function handles the constraints of the problem, specifically the limits on 'N' and 'Q'. Implement the helper function 'count_abc(S: str) -> int' to efficiently count occurrences of 'ABC' in the string. Format the output as a list of integers corresponding to the counts of 'ABC' after each query.