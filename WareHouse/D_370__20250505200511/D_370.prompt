Read integers H and W from standard input to define the grid dimensions. Initialize a 2D list 'grid' of size H x W, filled with walls (e.g., using a boolean value 'True' to represent walls). Read integer Q from standard input to determine the number of queries. For each query q from 1 to Q:\n   - Read integers R_q and C_q from standard input, representing the bomb placement coordinates.\n   - Check if there is a wall at '(R_q, C_q)':\n     - If there is a wall, destroy it by setting 'grid[R_q-1][C_q-1]' to 'False'.\n     - If there is no wall, perform the following four simultaneous checks:\n       - Check upwards (rows above R_q) for the first wall to destroy.\n       - Check downwards (rows below R_q) for the first wall to destroy.\n       - Check left (columns to the left of C_q) for the first wall to destroy.\n       - Check right (columns to the right of C_q) for the first wall to destroy. Implement a helper function 'destroy_wall(r, c)' that takes the coordinates of a wall and sets 'grid[r][c]' to 'False'. After processing all queries, count the remaining walls in the 'grid' by summing the 'True' values. Print the total count of remaining walls as the output.