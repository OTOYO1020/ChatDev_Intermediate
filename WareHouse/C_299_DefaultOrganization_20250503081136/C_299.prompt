Read the integer \( N \) and the string \( S \) from standard input. Initialize a variable \( X \) to -1 to keep track of the greatest level of dango string found. Loop through each character in the string \( S \) to identify potential starting points for dango strings:\n   - If the character is '-', check the substring that starts from this position. For each '-' found at position \( i \):\n   - Count the number of 'o' characters to the left until the next '-' or the start of the string.\n   - Count the number of 'o' characters to the right until the next '-' or the end of the string. Determine the level \( L \) of the dango string based on the counts of 'o' characters:\n   - The level \( L \) is the minimum of the left and right counts of 'o'. Update \( X \) with the maximum value of \( L \) found during the iterations. After checking all possible starting points, if \( X \) remains -1, it indicates no valid dango string was found. Print the value of \( X \) as the result.\n\nThis approach ensures that we efficiently find the greatest level of dango string in \( S \) while adhering to the constraints provided.