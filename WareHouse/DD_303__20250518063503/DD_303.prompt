Define the function 'min_time_to_type(S: str, X: int, Y: int, Z: int) -> int' to encapsulate the solution logic. Parse the input string 'S' to determine the number of 'A's and 'a's. Initialize variables to track the total time spent and the current state of the Caps Lock (on/off). Iterate through each character in the string 'S' and determine the optimal action based on the current Caps Lock state. If the character is 'A' and Caps Lock is off, calculate the time for pressing Shift + 'a' or toggling Caps Lock, and choose the minimum. If the character is 'A' and Caps Lock is on, calculate the time for pressing 'a' or toggling Caps Lock, and choose the minimum. If the character is 'a' and Caps Lock is off, calculate the time for pressing 'a' or toggling Caps Lock, and choose the minimum. If the character is 'a' and Caps Lock is on, calculate the time for pressing Shift + 'a' or toggling Caps Lock, and choose the minimum. Update the total time spent based on the chosen action for each character in 'S'. Return the total time spent as the output of the function.