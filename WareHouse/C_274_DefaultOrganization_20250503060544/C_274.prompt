Read the integer N from standard input, which represents the number of records. Initialize a list 'parent' of size '2N + 2' to store the parent amoeba for each amoeba, with 'parent[1]' set to 0 (indicating that amoeba 1 has no parent). For each record from 1 to N, read the integer 'A_i' and update the 'parent' list:\n   - Set 'parent[2*i]' to 'A_i' (the first child of 'A_i').\n   - Set 'parent[2*i + 1]' to 'A_i' (the second child of 'A_i'). Initialize a list 'generations' of size '2N + 2' to store the generation distance of each amoeba from amoeba 1, with 'generations[1]' set to 0. Use a queue to perform a breadth-first search (BFS) starting from amoeba 1 to calculate the generation distance for each amoeba:\n   - For each amoeba, enqueue its children (if they exist) and set their generation distance as 'generations[current] + 1'. After BFS completes, iterate through 'generations' from 1 to '2N + 1' and collect the generation distances. Print the generation distances for amoebae 1 to '2N + 1' as output.\n\nOutput format:\n- The output should be a single line containing the generation distances for amoebae 1 to '2N + 1', separated by spaces.