Define the function 'process_queries(S: str, queries: List[Tuple[int, int, int]]) -> List[int]' to handle the input string 'S' and a list of queries. Parse the input string 'S' to ensure it consists only of '0's and '1's and has a length of 'N'. Iterate through each query in the list 'queries' and extract the values of 'c', 'L', and 'R' for processing. For queries where 'c=1', implement the logic to flip the characters in the substring from index 'L' to 'R' in 'S'. For queries where 'c=2', extract the substring 'T' from 'S' using the indices 'L' and 'R'. Implement a function 'max_consecutive_ones(T: str) -> int' to calculate the maximum number of consecutive '1's in the string 'T'. Store the results of each query of type 'c=2' in a list to be returned after processing all queries. Ensure that the indices 'L' and 'R' are adjusted for 0-based indexing when accessing the string 'S'. Handle edge cases, such as when 'L' equals 'R', ensuring the logic still functions correctly. Return the list of results for all queries of type 'c=2' as the output of the function.