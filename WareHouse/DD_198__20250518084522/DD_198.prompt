Define a function 'is_alphametic(S1: str, S2: str, S3: str) -> Optional[Tuple[int, int, int]]' to handle the input strings S1, S2, and S3. Implement input handling to read the strings S1, S2, and S3 from standard input. Check if the lengths of S1, S2, and S3 are the same; if not, return None. Create a mapping of unique characters in S1, S2, and S3 to digits, ensuring no leading zeros for N1, N2, and N3. Generate all possible combinations of digit assignments for the unique characters, ensuring each combination is valid. For each combination, convert S1, S2, and S3 to their respective integer values N1, N2, and N3. Check if the condition N1 + N2 = N3 holds for the current combination of digit assignments. If a valid combination is found, return the tuple (N1, N2, N3). If no valid combination is found after testing all possibilities, return None. Output the result in the format 'N1 N2 N3' if a solution exists, otherwise output 'No solution'.