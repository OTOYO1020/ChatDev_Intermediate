Read the integer N from standard input, which represents the length of the sequence A. Read the sequence A of length N consisting of positive integers. Initialize a variable 'max_length' to 0 to keep track of the maximum length of a contiguous subarray that is a 1122 sequence. Use a nested loop to iterate through all possible starting indices 'start' of the subarrays in A. For each starting index 'start', initialize a dictionary 'count' to keep track of the frequency of each integer in the current subarray. Initialize a variable 'valid_length' to 0 to count the length of the valid 1122 sequence as we expand the subarray. For each ending index 'end' from 'start' to N-1:\n   - Update the count of the current integer A[end] in the 'count' dictionary.\n   - Check if the current subarray satisfies the conditions of a 1122 sequence:\n     - Ensure the length of the subarray is even.\n     - Ensure that every integer appears either not at all or exactly twice.\n     - Ensure that pairs of integers are equal.\n   - If valid, update 'valid_length' and compare it with 'max_length' to store the maximum found. After checking all subarrays, print the value of 'max_length' as the result. Ensure that the solution runs efficiently within the constraints, ideally in O(N^2) or better. Output the maximum length of the contiguous subarray that is a 1122 sequence.