Define the function 'find_minimum_index_difference(N: int, K: int, P: List[int]) -> int' to handle the input parameters. Parse the input to extract the values of N, K, and the permutation P. Implement a method to generate all possible good index sequences of length K from the permutation P. For each good index sequence, check if the subsequence can be rearranged to form consecutive integers. Calculate the difference 'i_K - i_1' for each valid good index sequence. Keep track of the minimum difference found across all good index sequences. Ensure that the indices in the good index sequences satisfy the condition '1 <= i_1 < i_2 < ... < i_K <= N'. Return the minimum value of 'i_K - i_1' as the output of the function. Handle edge cases where K equals 1 or N equals K. Format the output as an integer representing the minimum index difference.