Read the integer N and the string S from standard input. Initialize a variable 'count_ones' to count the number of '1's in S. Create a list 'positions' to store the indices of all '1's in S. Calculate the target positions for the '1's to be contiguous, which will be the range from 'positions[0]' to 'positions[count_ones - 1]'. Initialize a variable 'min_operations' to zero to keep track of the minimum number of operations needed. Iterate through the 'positions' list and for each index 'j', calculate the number of swaps needed to move the '1' at 'positions[j]' to its target position. Update 'min_operations' by adding the difference between the target position and the current position for each '1'. Print the value of 'min_operations' as the result.