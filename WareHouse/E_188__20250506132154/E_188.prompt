Read integers N and M from standard input, representing the number of towns and roads, respectively. Read the array A of length N, where A[i] represents the price of gold in Town i. Initialize a graph representation to store the roads, using an adjacency list or similar structure. For each road, read the pairs (X_i, Y_i) and populate the graph to represent directed edges from Town X_i to Town Y_i. Implement a depth-first search (DFS) or breadth-first search (BFS) to explore all reachable towns from each town. For each town, calculate the maximum selling price of gold reachable from that town using the graph. For each town, compute the profit by subtracting the buying price A[i] from the maximum selling price found in the previous step. Track the maximum profit encountered during the calculations. Return the maximum profit found. Print the maximum profit as the final output.