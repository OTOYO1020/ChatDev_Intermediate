Define the function 'calculate_distances(N: int, Q: int, roadworks: List[Tuple[int, int, int]], people: List[Tuple[int, int]]) -> List[int]' to handle the input parameters, where 'roadworks' contains tuples of (X_i, S_i, T_i) and 'people' contains tuples of (D_i, index). Parse the input to extract the number of roadworks 'N', number of people 'Q', and their respective details into the 'roadworks' and 'people' lists. Sort the 'roadworks' list based on the coordinate 'X_i' to facilitate efficient searching. For each person in the 'people' list, determine their starting time 'D_i' and calculate their walking distance until they encounter a blocked point. Implement a binary search mechanism to find the nearest blocked point for each person based on their starting time and the sorted 'roadworks' list. Check the time intervals of the roadworks to see if the person can walk past the blocked point or if they need to stop. Calculate the distance walked by each person based on their starting time and the nearest blocked point they encounter. Store the results in a list that corresponds to the order of the people in the input. Return the list of distances walked by each person from the function. Ensure the output format is a list of integers representing the distances for each person.