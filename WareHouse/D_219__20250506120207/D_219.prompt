Read integers N, X, and Y from standard input. Initialize an empty list 'lunchboxes' to store tuples of (A_i, B_i) for each lunchbox. For i from 1 to N, read the integers A_i and B_i and append the tuple (A_i, B_i) to 'lunchboxes'. Initialize a variable 'min_lunchboxes' to a large number to track the minimum number of lunchboxes needed. Use a combination approach to explore all subsets of 'lunchboxes':\n   - For each subset, calculate the total takoyaki and taiyaki.\n   - If the totals meet or exceed X and Y, update 'min_lunchboxes' with the size of the subset if it's smaller. After checking all combinations, determine if 'min_lunchboxes' was updated. If 'min_lunchboxes' is still large, print Impossible; otherwise, print the value of 'min_lunchboxes'. Ensure that the solution adheres to the constraints provided (1 ≤ N, X, Y ≤ 300). Handle edge cases where no lunchboxes are needed (X = 0, Y = 0). Output the result based on the findings from the combinations.