Define a function 'max_pairs(N: int, A: List[int]) -> int' to calculate the maximum number of pairs of socks that can be formed. Parse the input to extract the integer N and the list A of sock colors. Initialize a dictionary or a counter to keep track of the frequency of each sock color in the list A. Iterate through the frequency dictionary to calculate the number of pairs for each sock color by performing integer division of the count by 2. Sum the total number of pairs obtained from all sock colors. Return the total number of pairs as the output of the function. Ensure that the function handles the constraints where 1 ≤ N ≤ 500,000 and 1 ≤ A_i ≤ 1,000,000,000. Implement error handling for invalid inputs (e.g., negative numbers or non-integer values). Write test cases to validate the function with various scenarios including edge cases. Format the output as an integer representing the maximum number of pairs that can be formed.