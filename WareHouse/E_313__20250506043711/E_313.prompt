Read the input string \( S \) of length \( N \) from standard input. Initialize a counter \( \text{operations} = 0 \) to track the number of times the operation is performed. Create a function 'f(S)' that takes the string \( S \) and performs the following:\n   - Initialize an empty string \( T \).\n   - For each character \( S[i] \) from index 0 to \( |S| - 2 \):\n     - Convert \( S[i+1] \) to an integer \( n \).\n     - Append \( n \) copies of \( S[i] \) to \( T \).\n   - Return the resulting string \( T \). In a loop, repeatedly call 'f(S)' and update \( S \) with the result until \( |S| = 1 \):\n   - Increment \( \text{operations} \) by 1 for each iteration.\n   - If \( S \) does not change (i.e., \( S \) becomes the same as the previous iteration), print '-1' and terminate. After the loop, print the value of \( \text{operations} \) modulo \( 998244353 \).