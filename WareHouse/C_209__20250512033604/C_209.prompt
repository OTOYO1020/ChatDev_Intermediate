Define a function 'count_sequences(N: int, C: List[int]) -> int' to encapsulate the logic for counting valid sequences. Parse the input to read the integer N and the list of integers C from standard input. Ensure that the length of list C is equal to N, validating the input constraints. Implement a loop to iterate through the range from 1 to N to calculate the number of valid integers for each position based on the constraints given by C. Maintain a set or a list to track used integers to ensure that all A_i are distinct. Calculate the total number of valid sequences by multiplying the number of choices for each A_i while ensuring distinctness. Apply modulo operation with (10^9 + 7) to the result to handle large numbers. Return the final count of valid sequences from the function. Implement error handling for cases where input constraints are violated. Print the output in the required format after calling the function.